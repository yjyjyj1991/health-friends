<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.healthfriend.healthfriend.model.mapper.FoodManagementMapper">
    
  <update id="updateFoodManagementActivity" parameterType="foodManagementActivityDto">
    UPDATE tbl_user
    SET weight = #{weight} , purpose_id = #{purposeId} , active_point = #{activePoint}
    WHERE id = #{userId}
  </update>

  
<!-- create Food Management Start-->
  <select id="selectFoodUserExist" parameterType="foodManagementAddDto" resultType="int">
    SELECT * FROM tbl_food_management WHERE user_id = #{userId} AND DATE = DATE_FORMAT(NOW(),'%Y-%m-%d')
  </select>

  <insert id="createFoodUserExist" parameterType="foodManagementAddDto">
    INSERT INTO tbl_food_management (user_id, purpose_id, date, weight, active_point)
    VALUES (#{userId}, (SELECT purpose_id FROM tbl_user WHERE id = #{userId}), NOW() ,(SELECT weight FROM tbl_user WHERE id = #{userId}), (SELECT active_point FROM tbl_user WHERE id = #{userId}))
  </insert>

  <insert id="createFoodManagement" parameterType="foodManagementAddDto">
    INSERT INTO tbl_fm_with_food (fm_id,food_id,date,serving_size)
    VALUES ((SELECT id AS fm_id FROM tbl_food_management WHERE user_id = #{userId} AND DATE = DATE_FORMAT(NOW(),'%Y-%m-%d')),#{foodId},now(),#{servingSize})
  </insert>
<!-- create Food Management End-->


  <select id="selectFoodManagenent" parameterType="foodManagementListDto" resultType="foodReserveDto">
    SELECT fw.id,f.user_id,f.food_name,f.carbohydrate,f.protein,f.brand,f.fat,f.kcal,f.serving_size,fw.serving_size AS newServing 
	  FROM tbl_food f 
	  JOIN tbl_fm_with_food fw ON f.id = fw.food_id
	  WHERE DATE = #{date} AND fm_id = (SELECT id FROM tbl_food_management WHERE user_id = #{userId} AND DATE = DATE_FORMAT(NOW(),'%Y-%m-%d')) ORDER BY id;
  </select>

  <select id="selectFoodManagement2" parameterType="foodManagementListDto" resultType="foodReserveDto">
    SELECT COUNT(food_id) AS num FROM tbl_fm_with_food 
    WHERE DATE = #{date}
    GROUP BY food_id
    HAVING food_id = (
    SELECT food_id FROM tbl_food_management WHERE user_id = #{userId} AND DATE =(SELECT MAX(date) FROM tbl_food_management))
    ORDER BY food_id ASC
  </select>
  
  <delete id="deleteFoodManagement" parameterType="foodManagementRemoveDto">
    DELETE 
    FROM tbl_fm_with_food 
    WHERE id = #{id}
    
  </delete>

</mapper>
